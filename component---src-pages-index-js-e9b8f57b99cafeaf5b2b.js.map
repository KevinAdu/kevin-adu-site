{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","get","this","posts","title","map","post","node","path","tags","frontmatter","className","key","to","date","url","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"8OAOMA,E,gLACJC,OAAA,WACoBC,IAAIC,KAAM,sCACZD,IAAIC,KAAM,wCAD1B,IAEMC,EAAQF,IAAIC,KAAM,sCAExB,OACE,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAQE,MAAOH,IAAIC,KAAM,wCACxBC,EAAME,KAAI,SAAAC,GACT,GAAuB,UAAnBA,EAAKC,KAAKC,KAAkB,CAC9B,IAAMC,EAAOH,EAAKC,KAAKG,YAAYD,KAEnC,OACE,6BAASE,UAAU,OAAOC,IAAKN,EAAKC,KAAKG,YAAYF,MACnD,kBAAC,IAAD,CAAMG,UAAU,aAAaE,GAAIP,EAAKC,KAAKG,YAAYF,MACrD,4BAAKF,EAAKC,KAAKG,YAAYN,QAE7B,kBAAC,IAAD,CACEU,KAAMR,EAAKC,KAAKG,YAAYI,KAC5BL,KAAMA,EACNM,IAAKT,EAAKC,KAAKG,YAAYF,OAE7B,uBAAGQ,wBAAyB,CAAEC,OAAQX,EAAKC,KAAKW,WAChD,kBAAC,IAAD,CAAML,GAAIP,EAAKC,KAAKG,YAAYF,MAAhC,qB,GAzBMW,IAAMC,WAoCfrB,YAER,IAAMsB,EAAS","file":"component---src-pages-index-js-e9b8f57b99cafeaf5b2b.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport get from 'lodash/get';\nimport { Helmet } from 'react-helmet';\nimport PostMetadata from '../components/PostMetadata';\nimport Layout from '../components/layout';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const siteUrl = get(this, 'props.data.site.siteMetadata.siteUrl');\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout>\n        <main>\n          <Helmet title={get(this, 'props.data.site.siteMetadata.title')} />\n          {posts.map(post => {\n            if (post.node.path !== '/404/') {\n              const tags = post.node.frontmatter.tags;\n\n              return (\n                <article className=\"post\" key={post.node.frontmatter.path}>\n                  <Link className=\"post-title\" to={post.node.frontmatter.path}>\n                    <h2>{post.node.frontmatter.title}</h2>\n                  </Link>\n                  <PostMetadata\n                    date={post.node.frontmatter.date}\n                    tags={tags}\n                    url={post.node.frontmatter.path}\n                  />\n                  <p dangerouslySetInnerHTML={{ __html: post.node.excerpt }} />\n                  <Link to={post.node.frontmatter.path}>Read More</Link>\n                </article>\n              );\n            }\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            path\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","componentDidMount","document","querySelectorAll","forEach","image","imgCaption","alt","insertAdjacentHTML","render","post","this","props","data","markdownRemark","siteTitle","get","tagsList","frontmatter","tags","disqusConfig","title","className","date","url","path","dangerouslySetInnerHTML","__html","html","DiscussionEmbed","shortname","config","React","Component","pageQuery"],"mappings":"uPAOMA,E,wLACJC,kBAAA,WACiBC,SAASC,iBAAiB,gBAClCC,SAAQ,SAAAC,GACb,IAAMC,EAAU,0CAA6CD,EAAME,IAAnD,gBAChBF,EAAMG,mBAAmB,WAAYF,O,EAIzCG,OAAA,WAAU,IAEFC,EADWC,KAAKC,MAAdC,KACUC,eACZC,EAAYC,IAAIL,KAAKC,MAAO,gCAC5BK,EAAWP,EAAKQ,YAAYC,KAE5BC,EAAe,CACnBC,MAAOX,EAAKQ,YAAYG,OAG1B,OACE,kBAAC,IAAD,KACE,8BACE,6BAASC,UAAU,WACjB,kBAAC,IAAD,CAAQD,MAAUX,EAAKQ,YAAYG,MAAtB,MAAiCN,IAC9C,4BAAKL,EAAKQ,YAAYG,OACtB,kBAAC,IAAD,CACEE,KAAMb,EAAKQ,YAAYK,KACvBJ,KAAMF,EACNO,IAAKd,EAAKQ,YAAYO,OAExB,yBAAKC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QAC7C,8BAEF,kBAAC,IAAOC,gBAAR,CAAwBC,UAnBN,WAmBkCC,OAAQX,O,GAjCvCY,IAAMC,WAwCtBjC,YAER,IAAMkC,EAAS","file":"component---src-templates-blog-post-js-1a543a0a6b7e18b3cfe7.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport get from 'lodash/get';\nimport Disqus from 'disqus-react';\nimport PostMetadata from '../components/PostMetadata';\nimport Layout from '../components/layout';\n\nclass BlogPostTemplate extends React.Component {\n  componentDidMount() {\n    const images = document.querySelectorAll('.article img');\n    images.forEach(image => {\n      const imgCaption = `<figcaption class=\"post-image-caption\">${image.alt}</figcaption>`;\n      image.insertAdjacentHTML('afterend', imgCaption);\n    });\n  }\n\n  render() {\n    const { data } = this.props;\n    const post = data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    const tagsList = post.frontmatter.tags;\n    const disqusShortname = 'kevinadu';\n    const disqusConfig = {\n      title: post.frontmatter.title\n    };\n\n    return (\n      <Layout>\n        <main>\n          <article className=\"article\">\n            <Helmet title={`${post.frontmatter.title} | ${siteTitle}`} />\n            <h2>{post.frontmatter.title}</h2>\n            <PostMetadata\n              date={post.frontmatter.date}\n              tags={tagsList}\n              url={post.frontmatter.path}\n            />\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            <hr />\n          </article>\n          <Disqus.DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
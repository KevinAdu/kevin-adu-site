{"version":3,"sources":["webpack:///./src/templates/category-page.js"],"names":["CategoryPageTemplate","render","this","props","pathContext","data","category","siteTitle","get","posts","allMarkdownRemark","edges","title","map","post","className","to","node","frontmatter","path","date","React","Component","pageQuery"],"mappings":"4OAMMA,E,gLACJC,OAAA,WAAU,IAAD,EACuBC,KAAKC,MAA3BC,EADD,EACCA,YAAaC,EADd,EACcA,KACfC,EAAWF,EAAYE,SACvBC,EAAYC,IAAIN,KAAKC,MAAO,gCAC5BM,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAQC,MAAK,eAAiBN,EAAjB,OAAgCC,IAC7C,4BAAKD,GACJG,EAAMI,KAAI,SAAAC,GACT,OACE,yBAAKC,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,KAAKC,YAAYC,MAC9B,4BAAKL,EAAKG,KAAKC,YAAYN,QAE7B,8BAAOE,EAAKG,KAAKC,YAAYE,a,GAlBVC,IAAMC,WA4B1BtB,YAER,IAAMuB,EAAS","file":"component---src-templates-category-page-js-d11ee53f7561f96a9d8d.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport Link from 'gatsby-link';\nimport get from 'lodash/get';\nimport Layout from '../components/layout';\n\nclass CategoryPageTemplate extends React.Component {\n  render() {\n    const { pathContext, data } = this.props;\n    const category = pathContext.category;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout>\n        <main>\n          <Helmet title={`Category - \"${category}\" | ${siteTitle}`} />\n          <h2>{category}</h2>\n          {posts.map(post => {\n            return (\n              <div className=\"post-tag-listing\">\n                <Link to={post.node.frontmatter.path}>\n                  <h3>{post.node.frontmatter.title}</h3>\n                </Link>\n                <time>{post.node.frontmatter.date}</time>\n              </div>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default CategoryPageTemplate;\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}